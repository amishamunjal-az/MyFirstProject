1. Permissions on `/etc/shadow` should allow only `root` read and write access.

    - Command to inspect permissions: ls -l /etc/shadow 

2. Add user accounts for `sam`, `joe`, `amy`, `sara`, and `admin`.

- Command to add each user account (include all five users): sudo usermod sam -aG engineers
sudo usermod joe -aG engineers
sudo usermod amy -aG engineers
sudo usermod sara -aG engineers

3. Ensure that only the `admin` has general sudo access.

    - Command to add `admin` to the `sudo` group:  sudo  usermod admin -aG sudo

4. Add an `engineers` group to the system.

    - Command to add group:   sudo addgroup engineers

5. Add users `sam`, `joe`, `amy`, and `sara` to the managed group.

    - Command to add users to `engineers` group (include all four users):  sudo usermod sam -aG engineers
                                                                           sudo usermod joe -aG engineers
                                                                           sudo usermod amy -aG engineers
                                                                           sudo usermod sara -aG engineers     
6. Create a shared folder for this group at `/home/engineers`.

    - Command to create the shared folder: sudo mkdir engineers

7.Change ownership on the new engineers' shared folder to the `engineers` group.

    - Command to change ownership of engineer's shared folder to engineer group: sudo chown :engineers /home/engineers

8. Command to install Lynis: sudo apt install lynis

9. Command to see documentation and instructions: man lynis

10. Command to run an audit: sudo lynis audit system

11. Command to install chkrootkit: sudo apt install chkrootkit

12. Command to see documentation and instructions: man chkrootkit

13. Command to run expert mode:  sudo chkrootkit -x


14. Command to **extract** the `TarDocs.tar` archive to the current directory:

Ans :- tar -xvvf TarDocs.tar 

15. Command to **create** the `Javaless_Doc.tar` archive from the `TarDocs/` directory, while excluding the `TarDocs/Documents/Java` directory:

Ans :- tar -cvvf Javaless_Docs.tar --exclude=TarDocs/Documents/Java TarDocs

16. Command to ensure `Java/` is not in the new `Javaless_Docs.tar` archive:
Ans :- tar -tvvf Javaless_Docs.tar |grep JAVA

**Bonus** 
17. Command to create an incremental archive called `logs_backup_tar.gz` with only changed files to `snapshot.file` for the `/var/log` directory:
Ans :- tar zWvf logs_backup_tar.gz --listed-incremental=snapshot.snar TarDocs

#### Critical Analysis Question

18. Why wouldn't you use the options `-x` and `-c` at the same time with `tar`?
The option c creates an archive or a tarball from specified files or directories. If a directory is specified, all its files and sub-directories will be included in the archived file
The option x extracts the archive. This option also needs an archive file specified with the option f.
---

### Step 2: Create, Manage, and Automate Cron Jobs

19. Cron job for backing up the `/var/log/auth.log` file:
Ans :-  0 6  *   *   3     sudo tar -zcvf /auth_backup.tgz /var/log/auth.log

### Step 3: Write Basic Bash Scripts

20. Brace expansion command to create the four subdirectories:
Ans :- mkdir -p backups/{freemem,diskuse,openlist,freedisk}

21. Paste your `system.sh` script edits below:

    ```bash
    #!/bin/bash
    [Your solution script contents here]
    free -h > ~/backups/freemem/free_mem.txt
    du -h  > ~/backups/diskuse/disk_usage.txt
    lsof  > ~/backups/openlist/open_list.txt
    df -h  > ~/backups/freedisk/free_disk.txt

22. Command to make the `system.sh` script executable:
chmod +x system.sh
**Optional**
- Commands to test the script and confirm its execution:
sudo ./system.sh
cat ~/backups/diskuse/disk_usage.txt
cat ~/backups/freemem/free_mem.txt
cat ~/backups/openlist/open_list.txt
cat ~/backups/freedisk/free_disk.txt

**Bonus**
23. Command to copy `system` to system-wide cron directory:
@weekly system.sh
---

24. Manage Log File Sizes
 
1. Run `sudo nano /etc/logrotate.conf` to edit the `logrotate` configuration file. 

    Configure a log rotation scheme that backs up authentication messages to the `/var/log/auth.log`.

    - Add your config file edits below:
/var/log/auth.log {
    missingok
    monthly
    create
    rotate 1
}

25. Check for Policy and File Violations

a. Command to verify `auditd` is active:
Ans -     systemctl status auditd
b. Command to set number of retained logs and maximum log file size:
   Ans : sudo nano auditd.conf
    - Add the edits made to the configuration file below:

    ```bash
    [Your solution edits here]
    ```

local_events = yes
write_logs = yes
log_file = /var/log/audit/audit.log
log_group = adm
log_format = RAW
flush = INCREMENTAL_ASYNC
freq = 50
max_log_file = 50
num_logs = 10
priority_boost = 4
disp_qos = lossy
dispatcher = /sbin/audispd
name_format = NONE

c. Command using `auditd` to set rules for `/etc/shadow`, `/etc/passwd` and `/var/log/auth.log`:
      Ans :-  /etc/audit/rules.d$ sudo nano audit.rules

    - Add the edits made to the `rules` file below:

    ```bash
    [Your solution edits here]
    -w /etc/shadow -p wa -k shadow
    -w /etc/passwd -p wa -k passwd


d. Command to restart `auditd`:
Ans :-     sudo systemctl restart auditd
e. Command to list all `auditd` rules:
Ans :- auditctl -l
f. Command to produce an audit report:
Ans : - sudo aureport 
g. Create a user with `sudo useradd attacker` and produce an audit report that lists account modifications:
Ans :-   sudo aureport -m

Account Modifications Report
=================================================
# date time auid addr term exe acct success event
=================================================
1. 07/23/2021 17:41:04 -1 ? ? /usr/sbin/useradd vboxadd no 270
2. 07/23/2021 17:41:04 -1 ? ? /usr/sbin/useradd vboxadd no 271
3. 07/23/2021 17:41:04 -1 ? ? /usr/sbin/useradd vboxadd no 272
4. 07/23/2021 17:41:04 -1 ? ? /usr/sbin/useradd vboxadd no 273
5. 07/24/2021 09:14:56 -1 ? ? /usr/sbin/useradd vboxadd no 260
6. 07/24/2021 09:14:56 -1 ? ? /usr/sbin/useradd vboxadd no 261
7. 07/24/2021 09:14:56 -1 ? ? /usr/sbin/useradd vboxadd no 262
8. 07/24/2021 09:14:56 -1 ? ? /usr/sbin/useradd vboxadd no 263
9. 07/25/2021 16:39:03 1000 UbuntuDesktop pts/1 /usr/sbin/useradd attacker yes 4673
10. 07/25/2021 16:39:03 1000 UbuntuDesktop pts/1 /usr/sbin/useradd ? yes 4674
11. 07/25/2021 17:11:51 1000 UbuntuDesktop pts/1 /usr/sbin/useradd attacker1 yes 5224
12. 07/25/2021 17:11:51 1000 UbuntuDesktop pts/1 /usr/sbin/useradd ? yes 5225


h. Command to use `auditd` to watch `/var/log/cron`:
Ans :- sudo auditctl -w /var/log/cron/
i. Command to verify `auditd` rules:
Ans : sudo auditctl -l

---
26. Bonus (Research Activity): Perform Various Log Filtering Techniques

a. Command to return `journalctl` messages with priorities from emergency to error:
Ans : - sudo journalctl -p 0
sudo journalctl -p 7
b. Command to check the disk usage of the system journal unit since the most recent boot:
Ans: sudo journalctl --disk-usage
c. Comand to remove all archived journal files except the most recent two:
Ans : sudo journalctl --vacuum-file=2

d. Command to filter all log messages with priority levels between zero and two, and save output to `/home/sysadmin/Priority_High.txt`:

e. Command to automate the last command in a daily cronjob. Add the edits made to the crontab file below:

    ```bash
    [Your solution cron edits here]
    ```

---





